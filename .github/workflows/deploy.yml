name: Deploy Static Website

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Build frontend
        run: |
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy with Serverless Framework
        id: deploy
        run: |
          serverless deploy --param="stackName=${{ secrets.STACK_NAME }}" --param="domainName=${{ secrets.DOMAIN_NAME }}" --param="certificateArn=${{ secrets.CERTIFICATE_ARN }}" --stage=${{ secrets.STAGE }} --verbose --region=${{ secrets.AWS_REGION }}

      - name: Deploy static assets
        run: |
          aws s3 sync dist/ s3://${{ secrets.STACK_NAME }}-website-${{ secrets.STAGE }}/ --delete

      - name: Invalidate CloudFront cache
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[0]=='${{ secrets.DOMAIN_NAME }}'].Id" --output text)
          if [ ! -z "$DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
          fi
